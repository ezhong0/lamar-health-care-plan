
> lamar-health-temp@0.1.0 test
> vitest run --config config/vitest.config.ts

[dotenv@17.2.3] injecting env (3) from .env -- tip: ‚öôÔ∏è  suppress all logs with { quiet: true }

[1m[46m RUN [49m[22m [36mv4.0.4 [39m[90m/Users/edwardzhong/Projects/lamar health[39m

 [31m‚ùØ[39m __tests__/unit/validation/icd10-validator.test.ts [2m([22m[2m44 tests[22m[2m | [22m[31m1 failed[39m[2m)[22m[32m 68[2mms[22m[39m
       [32m‚úì[39m should accept valid ICD-10 code with decimal[32m 5[2mms[22m[39m
       [32m‚úì[39m should accept valid ICD-10 code without decimal[32m 11[2mms[22m[39m
       [32m‚úì[39m should accept code with maximum decimal length[32m 3[2mms[22m[39m
       [32m‚úì[39m should accept code with minimum decimal length[32m 0[2mms[22m[39m
       [32m‚úì[39m should accept codes from different chapters[32m 2[2mms[22m[39m
       [32m‚úì[39m should reject code without letter prefix[32m 1[2mms[22m[39m
       [32m‚úì[39m should reject code with only letter[32m 1[2mms[22m[39m
       [32m‚úì[39m should reject code with only 2 characters[32m 0[2mms[22m[39m
       [32m‚úì[39m should reject code with too many decimal digits[32m 1[2mms[22m[39m
       [32m‚úì[39m should reject code with letter in numeric section[32m 5[2mms[22m[39m
       [32m‚úì[39m should reject code with multiple decimals[32m 0[2mms[22m[39m
       [32m‚úì[39m should reject empty string[32m 0[2mms[22m[39m
       [32m‚úì[39m should reject code with special characters[32m 0[2mms[22m[39m
       [32m‚úì[39m should reject code with invalid chapter U[32m 8[2mms[22m[39m
       [32m‚úì[39m should reject code with lowercase letter[32m 0[2mms[22m[39m
       [32m‚úì[39m should accept all valid chapter letters[32m 4[2mms[22m[39m
       [32m‚úì[39m should trim leading whitespace[32m 0[2mms[22m[39m
       [32m‚úì[39m should trim trailing whitespace[32m 0[2mms[22m[39m
       [32m‚úì[39m should trim both[32m 0[2mms[22m[39m
       [32m‚úì[39m should reject code with internal whitespace[32m 0[2mms[22m[39m
       [32m‚úì[39m should accept lowercase code[32m 0[2mms[22m[39m
       [32m‚úì[39m should accept mixed case code[32m 0[2mms[22m[39m
       [32m‚úì[39m should accept uppercase code[32m 0[2mms[22m[39m
       [32m‚úì[39m should validate common diabetes codes[32m 0[2mms[22m[39m
       [32m‚úì[39m should validate common respiratory codes[32m 0[2mms[22m[39m
       [32m‚úì[39m should validate common cardiovascular codes[32m 0[2mms[22m[39m
       [32m‚úì[39m should accept code at minimum category[32m 0[2mms[22m[39m
       [32m‚úì[39m should accept code at maximum category[32m 0[2mms[22m[39m
       [32m‚úì[39m should accept code in middle of range[32m 0[2mms[22m[39m
       [32m‚úì[39m should format code without decimal[32m 0[2mms[22m[39m
       [32m‚úì[39m should keep code with decimal as-is[32m 0[2mms[22m[39m
       [32m‚úì[39m should handle uppercase[32m 0[2mms[22m[39m
       [32m‚úì[39m should handle lowercase[32m 0[2mms[22m[39m
       [32m‚úì[39m should return original for invalid length[32m 0[2mms[22m[39m
       [32m‚úì[39m should return original for invalid format[32m 0[2mms[22m[39m
       [32m‚úì[39m should handle code with existing decimal[32m 0[2mms[22m[39m
       [32m‚úì[39m should remove extra decimals[32m 0[2mms[22m[39m
       [32m‚úì[39m should handle very short valid code[32m 0[2mms[22m[39m
[31m       [31m√ó[31m should handle maximum length valid code[39m[32m 13[2mms[22m[39m
       [32m‚úì[39m should handle code with leading zeros in category[32m 0[2mms[22m[39m
       [32m‚úì[39m should handle null-like input gracefully[32m 0[2mms[22m[39m
       [32m‚úì[39m should validate quickly[32m 2[2mms[22m[39m
       [32m‚úì[39m should validate codes from test data[32m 0[2mms[22m[39m
       [32m‚úì[39m should reject common typos[32m 0[2mms[22m[39m
[90mstdout[2m | __tests__/unit/services/care-plan-service.test.ts[2m > [22m[2mCarePlanService[2m > [22m[2mgenerateCarePlan[2m > [22m[2mshould generate care plan for valid patient
[22m[39m{"timestamp":"2025-10-28T16:02:35.390Z","level":"error","message":"Care plan generation failed - LLM error","patientId":"cmhar9azp00018cbhxah4i39y","error":"Failed to generate care plan: Cannot generate care plan: patient has no medication orders","details":{"reason":"Cannot generate care plan: patient has no medication orders"},"duration":16}

 [31m‚ùØ[39m __tests__/infrastructure/error-handler.test.ts [2m([22m[2m22 tests[22m[2m | [22m[31m2 failed[39m[2m)[22m[32m 134[2mms[22m[39m
       [32m‚úì[39m handles DuplicatePatientError with 409 status[32m 3[2mms[22m[39m
       [32m‚úì[39m handles PatientNotFoundError with 404 status[32m 0[2mms[22m[39m
       [32m‚úì[39m handles ProviderConflictError with 409 status[32m 0[2mms[22m[39m
       [32m‚úì[39m handles CarePlanGenerationError with 500 status[32m 0[2mms[22m[39m
       [32m‚úì[39m handles ValidationError with 400 status[32m 1[2mms[22m[39m
[31m       [31m√ó[31m logs domain errors as warnings[39m[32m 4[2mms[22m[39m
       [32m‚úì[39m handles ZodError with 400 status[32m 1[2mms[22m[39m
       [32m‚úì[39m handles nested path in ZodError[32m 0[2mms[22m[39m
[31m       [31m√ó[31m logs validation errors as warnings[39m[32m 2[2mms[22m[39m
       [32m‚úì[39m handles unique constraint violation (P2002) with 409 status[32m 1[2mms[22m[39m
       [32m‚úì[39m handles record not found (P2025) with 404 status[32m 1[2mms[22m[39m
       [32m‚úì[39m handles other Prisma errors with 500 status[32m 0[2mms[22m[39m
       [32m‚úì[39m logs Prisma errors[32m 0[2mms[22m[39m
       [32m‚úì[39m handles generic Error with 500 status[32m 1[2mms[22m[39m
       [32m‚úì[39m handles non-Error objects[32m 1[2mms[22m[39m
       [32m‚úì[39m handles null error[32m 3[2mms[22m[39m
       [32m‚úì[39m handles undefined error[32m 1[2mms[22m[39m
       [32m‚úì[39m logs unexpected errors with stack trace[32m 94[2mms[22m[39m
       [32m‚úì[39m logs non-Error objects safely[32m 5[2mms[22m[39m
       [32m‚úì[39m always includes success: false[32m 4[2mms[22m[39m
       [32m‚úì[39m always includes error message[32m 3[2mms[22m[39m
       [32m‚úì[39m always includes error code[32m 6[2mms[22m[39m
[90mstdout[2m | __tests__/unit/services/care-plan-service.test.ts[2m > [22m[2mCarePlanService[2m > [22m[2mgenerateCarePlan[2m > [22m[2mshould return error if patient has no orders
[22m[39m{"timestamp":"2025-10-28T16:02:35.444Z","level":"error","message":"Care plan generation failed - LLM error","patientId":"cmhar9b1k00048cbhk6qe6srj","error":"Failed to generate care plan: Cannot generate care plan: patient has no medication orders","details":{"reason":"Cannot generate care plan: patient has no medication orders"},"duration":9}

[90mstdout[2m | __tests__/unit/services/care-plan-service.test.ts[2m > [22m[2mCarePlanService[2m > [22m[2mgenerateCarePlan[2m > [22m[2mshould include model name in care plan
[22m[39m{"timestamp":"2025-10-28T16:02:35.489Z","level":"error","message":"Care plan generation failed - unexpected error","patientId":"cmhar9b2w000e8cbhldlzsa06","error":"\nInvalid `prisma.carePlan.create()` invocation:\n\n\nForeign key constraint violated on the constraint: `care_plans_patient_id_fkey`","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.carePlan.create()` invocation:\n\n\nForeign key constraint violated on the constraint: `care_plans_patient_id_fkey`\n    at ei.handleRequestError (/Users/edwardzhong/Projects/lamar health/node_modules/.prisma/client/runtime/library.js:124:7268)\n    at ei.handleAndLogRequestError (/Users/edwardzhong/Projects/lamar health/node_modules/.prisma/client/runtime/library.js:124:6593)\n    at ei.request (/Users/edwardzhong/Projects/lamar health/node_modules/.prisma/client/runtime/library.js:124:6300)\n    at a (/Users/edwardzhong/Projects/lamar health/node_modules/.prisma/client/runtime/library.js:133:9551)\n    at CarePlanService.generateCarePlan (/Users/edwardzhong/Projects/lamar health/lib/services/care-plan-service.ts:145:24)\n    at /Users/edwardzhong/Projects/lamar health/__tests__/unit/services/care-plan-service.test.ts:347:22\n    at file:///Users/edwardzhong/Projects/lamar%20health/node_modules/@vitest/runner/dist/index.js:753:20","duration":6}

 [31m‚ùØ[39m __tests__/unit/services/care-plan-service.test.ts [2m([22m[2m12 tests[22m[2m | [22m[31m7 failed[39m[2m)[22m[33m 306[2mms[22m[39m
[31m       [31m√ó[31m should generate care plan for valid patient[39m[32m 122[2mms[22m[39m
       [32m‚úì[39m should return error for non-existent patient[32m 31[2mms[22m[39m
       [32m‚úì[39m should return error if patient has no orders[32m 19[2mms[22m[39m
[31m       [31m√ó[31m should handle LLM timeout[39m[32m 10[2mms[22m[39m
[31m       [31m√ó[31m should handle LLM API error[39m[32m 6[2mms[22m[39m
[31m       [31m√ó[31m should save care plan to database[39m[32m 8[2mms[22m[39m
       [32m‚úì[39m should include model name in care plan[32m 20[2mms[22m[39m
[31m       [31m√ó[31m should validate response is not empty[39m[32m 24[2mms[22m[39m
       [32m‚úì[39m should return care plans for patient[32m 8[2mms[22m[39m
       [32m‚úì[39m should return empty array for patient with no care plans[32m 24[2mms[22m[39m
[31m       [31m√ó[31m should return care plans in descending order by creation date[39m[32m 15[2mms[22m[39m
[31m       [31m√ó[31m should build prompt with patient information[39m[32m 12[2mms[22m[39m
 [31m‚ùØ[39m __tests__/services/duplicate-detector.test.ts [2m([22m[2m14 tests[22m[2m | [22m[31m2 failed[39m[2m)[22m[32m 208[2mms[22m[39m
       [32m‚úì[39m does not crash when checking for similar patients[32m 51[2mms[22m[39m
       [32m‚úì[39m finds similar patient with different spelling[32m 7[2mms[22m[39m
       [32m‚úì[39m does not flag completely different names[32m 11[2mms[22m[39m
[31m       [31m√ó[31m excludes exact MRN matches[39m[32m 16[2mms[22m[39m
       [32m‚úì[39m returns multiple warnings for multiple similar patients[32m 18[2mms[22m[39m
       [32m‚úì[39m handles strings with repeated characters correctly[32m 5[2mms[22m[39m
       [32m‚úì[39m returns 1.0 for identical strings[32m 3[2mms[22m[39m
       [32m‚úì[39m returns 0.0 for completely different strings[32m 4[2mms[22m[39m
[31m       [31m√ó[31m handles empty strings gracefully[39m[32m 11[2mms[22m[39m
       [32m‚úì[39m calculates similarity for names with common patterns[32m 6[2mms[22m[39m
       [32m‚úì[39m detects duplicate order within 30 days[32m 24[2mms[22m[39m
       [32m‚úì[39m handles case-insensitive medication matching[32m 14[2mms[22m[39m
       [32m‚úì[39m does not flag different medications[32m 18[2mms[22m[39m
       [32m‚úì[39m returns no warnings for new patient with no orders[32m 18[2mms[22m[39m
 [31m‚ùØ[39m __tests__/unit/services/duplicate-detector.test.ts [2m([22m[2m27 tests[22m[2m | [22m[31m9 failed[39m[2m)[22m[33m 428[2mms[22m[39m
[31m       [31m√ó[31m should find exact name match (different MRN)[39m[32m 88[2mms[22m[39m
[31m       [31m√ó[31m should find fuzzy name match[39m[32m 27[2mms[22m[39m
       [32m‚úì[39m should not flag completely different names[32m 8[2mms[22m[39m
       [32m‚úì[39m should skip exact MRN match[32m 6[2mms[22m[39m
       [32m‚úì[39m should handle multiple similar patients[32m 8[2mms[22m[39m
       [32m‚úì[39m should only check last 100 patients for performance[32m 52[2mms[22m[39m
[31m       [31m√ó[31m should calculate similarity score correctly[39m[32m 46[2mms[22m[39m
       [32m‚úì[39m should include similarity score in message[32m 13[2mms[22m[39m
[31m       [31m√ó[31m should find duplicate order for same patient and medication[39m[32m 23[2mms[22m[39m
[31m       [31m√ó[31m should handle case-insensitive medication names[39m[32m 7[2mms[22m[39m
       [32m‚úì[39m should not flag order for different medication[32m 13[2mms[22m[39m
[31m       [31m√ó[31m should not flag order for different patient[39m[32m 16[2mms[22m[39m
[31m       [31m√ó[31m should only flag orders within 30 days[39m[32m 10[2mms[22m[39m
[31m       [31m√ó[31m should return multiple duplicate orders if they exist[39m[32m 17[2mms[22m[39m
[31m       [31m√ó[31m should return 1.0 for identical strings[39m[32m 7[2mms[22m[39m
       [32m‚úì[39m should return 0.0 for completely different strings[32m 5[2mms[22m[39m
       [32m‚úì[39m should return value between 0 and 1 for similar strings[32m 5[2mms[22m[39m
       [32m‚úì[39m should be case-sensitive[32m 12[2mms[22m[39m
       [32m‚úì[39m should handle single character difference[32m 5[2mms[22m[39m
       [32m‚úì[39m should handle empty strings[32m 3[2mms[22m[39m
       [32m‚úì[39m should generate correct trigrams for short string[32m 7[2mms[22m[39m
       [32m‚úì[39m should generate correct trigrams with padding[32m 7[2mms[22m[39m
       [32m‚úì[39m should handle empty string[32m 7[2mms[22m[39m
       [32m‚úì[39m should generate overlapping trigrams[32m 6[2mms[22m[39m
       [32m‚úì[39m should weight last name more than first name[32m 4[2mms[22m[39m
       [32m‚úì[39m should include MRN similarity in score[32m 7[2mms[22m[39m
       [32m‚úì[39m should return score between 0 and 1[32m 9[2mms[22m[39m
 [31m‚ùØ[39m __tests__/integration/api/patients.integration.test.ts [2m([22m[2m14 tests[22m[2m | [22m[31m5 failed[39m[2m)[22m[33m 700[2mms[22m[39m
       [32m‚úì[39m should create patient with valid data[32m 260[2mms[22m[39m
       [32m‚úì[39m should create patient and provider atomically[32m 27[2mms[22m[39m
[31m       [31m√ó[31m should create patient and order atomically[39m[32m 109[2mms[22m[39m
[31m       [31m√ó[31m should reject duplicate MRN[39m[32m 8[2mms[22m[39m
       [32m‚úì[39m should return warnings for similar patients[32m 46[2mms[22m[39m
[31m       [31m√ó[31m should reuse existing provider with same NPI[39m[32m 37[2mms[22m[39m
[31m       [31m√ó[31m should warn on provider name mismatch for same NPI[39m[32m 41[2mms[22m[39m
       [32m‚úì[39m should handle transaction rollback on error[32m 43[2mms[22m[39m
       [32m‚úì[39m should return list of patients[32m 12[2mms[22m[39m
       [32m‚úì[39m should return patients in descending order by creation date[32m 18[2mms[22m[39m
       [32m‚úì[39m should return patient with related data[32m 34[2mms[22m[39m
[31m       [31m√ó[31m should return null for non-existent patient[39m[32m 16[2mms[22m[39m
       [32m‚úì[39m should handle database connection errors gracefully[32m 5[2mms[22m[39m
       [32m‚úì[39m should validate input before database operations[32m 31[2mms[22m[39m
 [32m‚úì[39m __tests__/utils/sanitize.test.ts [2m([22m[2m37 tests[22m[2m)[22m[33m 1182[2mms[22m[39m
       [33m[2m‚úì[22m[39m handles very long content [33m 1100[2mms[22m[39m
[90mstdout[2m | __tests__/services/seed-service.test.ts[2m > [22m[2mSeedService[2m > [22m[2mseedDemoData[2m > [22m[2mincludes medication history for patients
[22m[39mCleanup warning: 
Invalid `prisma.provider.deleteMany()` invocation:


Foreign key constraint violated on the constraint: `orders_provider_id_fkey`

 [32m‚úì[39m __tests__/infrastructure/production-readiness.test.ts [2m([22m[2m16 tests[22m[2m | [22m[33m4 skipped[39m[2m)[22m[33m 614[2mms[22m[39m
 [32m‚úì[39m __tests__/components/PatientCard.test.tsx [2m([22m[2m14 tests[22m[2m)[22m[32m 279[2mms[22m[39m
[90mstdout[2m | __tests__/services/seed-service.test.ts[2m > [22m[2mSeedService[2m > [22m[2mseedDemoData[2m > [22m[2mincludes additional diagnoses for patients
[22m[39mCleanup warning: 
Invalid `prisma.provider.deleteMany()` invocation:


Foreign key constraint violated on the constraint: `orders_provider_id_fkey`

 [32m‚úì[39m __tests__/components/WarningList.test.tsx [2m([22m[2m7 tests[22m[2m)[22m[33m 483[2mms[22m[39m
 [32m‚úì[39m __tests__/components/CarePlanView.test.tsx [2m([22m[2m9 tests[22m[2m)[22m[33m 479[2mms[22m[39m
 [31m‚ùØ[39m __tests__/services/export-service.test.ts [2m([22m[2m10 tests[22m[2m | [22m[31m6 failed[39m[2m)[22m[33m 335[2mms[22m[39m
[31m       [31m√ó[31m generates CSV with correct headers[39m[32m 114[2mms[22m[39m
[31m       [31m√ó[31m exports patient data correctly[39m[32m 43[2mms[22m[39m
[31m       [31m√ó[31m handles empty database[39m[32m 29[2mms[22m[39m
[31m       [31m√ó[31m escapes CSV special characters correctly[39m[32m 67[2mms[22m[39m
[31m       [31m√ó[31m handles multiple patients[39m[32m 10[2mms[22m[39m
[31m       [31m√ó[31m includes care plan status[39m[32m 10[2mms[22m[39m
       [32m‚úì[39m handles patients with no orders[32m 8[2mms[22m[39m
       [32m‚úì[39m formats dates correctly[32m 15[2mms[22m[39m
       [32m‚úì[39m handles additional diagnoses array[32m 15[2mms[22m[39m
       [32m‚úì[39m truncates long care plan summaries[32m 24[2mms[22m[39m
[90mstdout[2m | __tests__/services/seed-service.test.ts[2m > [22m[2mSeedService[2m > [22m[2mgetDemoStats[2m > [22m[2mreturns statistics for demo data
[22m[39mCleanup warning: 
Invalid `prisma.provider.deleteMany()` invocation:


Foreign key constraint violated on the constraint: `orders_provider_id_fkey`

[90mstdout[2m | __tests__/services/provider-service.test.ts[2m > [22m[2mProviderService[2m > [22m[2mupsertProvider[2m > [22m[2mcreates new provider when NPI does not exist
[22m[39mCleanup warning: 
Invalid `prisma.provider.deleteMany()` invocation:


Foreign key constraint violated on the constraint: `orders_provider_id_fkey`

 [31m‚ùØ[39m __tests__/services/seed-service.test.ts [2m([22m[2m15 tests[22m[2m | [22m[31m1 failed[39m[2m)[22m[33m 2068[2mms[22m[39m
       [32m‚úì[39m creates demo patients successfully[32m 257[2mms[22m[39m
       [32m‚úì[39m creates expected number of patients[32m 76[2mms[22m[39m
[31m       [31m√ó[31m creates patients with valid data[39m[32m 99[2mms[22m[39m
       [32m‚úì[39m creates providers with valid NPIs[32m 112[2mms[22m[39m
       [32m‚úì[39m creates orders for patients[32m 91[2mms[22m[39m
       [32m‚úì[39m is idempotent - can run multiple times[32m 201[2mms[22m[39m
       [32m‚úì[39m clears previous demo data before seeding[32m 239[2mms[22m[39m
       [32m‚úì[39m creates realistic patient records[32m 95[2mms[22m[39m
       [33m[2m‚úì[22m[39m creates patients with ICD-10 diagnoses [32m 300[2mms[22m[39m
       [32m‚úì[39m creates providers that can be reused[32m 113[2mms[22m[39m
       [32m‚úì[39m includes medication history for patients[32m 97[2mms[22m[39m
       [32m‚úì[39m includes additional diagnoses for patients[32m 164[2mms[22m[39m
       [32m‚úì[39m returns summary of created data[32m 112[2mms[22m[39m
       [32m‚úì[39m returns statistics for demo data[32m 98[2mms[22m[39m
       [32m‚úì[39m returns zero counts when no demo data exists[32m 10[2mms[22m[39m
 [31m‚ùØ[39m __tests__/services/patient-service.test.ts [2m([22m[2m11 tests[22m[2m | [22m[31m6 failed[39m[2m)[22m[33m 476[2mms[22m[39m
[31m       [31m√ó[31m creates patient with provider and order in single transaction[39m[32m 141[2mms[22m[39m
[31m       [31m√ó[31m rejects duplicate MRN with error[39m[32m 83[2mms[22m[39m
       [32m‚úì[39m detects similar patients and returns warnings[32m 45[2mms[22m[39m
[31m       [31m√ó[31m reuses existing provider when NPI and name match[39m[32m 76[2mms[22m[39m
[31m       [31m√ó[31m detects duplicate orders within 30 days[39m[32m 18[2mms[22m[39m
       [32m‚úì[39m handles transaction rollback on error[32m 12[2mms[22m[39m
[31m       [31m√ó[31m handles minimal required fields (no optional arrays)[39m[32m 15[2mms[22m[39m
       [32m‚úì[39m returns patient with orders and care plans[32m 26[2mms[22m[39m
       [32m‚úì[39m returns null for non-existent patient[32m 8[2mms[22m[39m
[31m       [31m√ó[31m returns patients ordered by creation date[39m[32m 43[2mms[22m[39m
       [32m‚úì[39m respects limit parameter[32m 6[2mms[22m[39m
 [31m‚ùØ[39m __tests__/services/provider-service.test.ts [2m([22m[2m12 tests[22m[2m | [22m[31m1 failed[39m[2m)[22m[32m 221[2mms[22m[39m
       [32m‚úì[39m creates new provider when NPI does not exist[32m 41[2mms[22m[39m
[31m       [31m√ó[31m returns existing provider when NPI and name match[39m[32m 47[2mms[22m[39m
       [32m‚úì[39m returns existing provider with case-insensitive name match[32m 24[2mms[22m[39m
       [32m‚úì[39m returns warning when NPI exists with different name[32m 14[2mms[22m[39m
       [32m‚úì[39m normalizes provider name to title case[32m 8[2mms[22m[39m
       [32m‚úì[39m removes formatting from NPI[32m 6[2mms[22m[39m
       [32m‚úì[39m handles whitespace in input[32m 9[2mms[22m[39m
       [32m‚úì[39m returns provider when found[32m 17[2mms[22m[39m
       [32m‚úì[39m returns null when provider not found[32m 9[2mms[22m[39m
       [32m‚úì[39m returns provider when found[32m 21[2mms[22m[39m
       [32m‚úì[39m handles formatted NPI input[32m 19[2mms[22m[39m
       [32m‚úì[39m returns null when provider not found[32m 5[2mms[22m[39m
[90mstdout[2m | __tests__/unit/infrastructure/retry.test.ts[2m > [22m[2mRetry Utility[2m > [22m[2mReal-world scenarios[2m > [22m[2mshould handle network timeout simulation
[22m[39mRetry attempt 1: Network timeout

[90mstdout[2m | __tests__/unit/infrastructure/retry.test.ts[2m > [22m[2mRetry Utility[2m > [22m[2mReal-world scenarios[2m > [22m[2mshould handle network timeout simulation
[22m[39mRetry attempt 2: Network timeout

 [32m‚úì[39m __tests__/unit/infrastructure/retry.test.ts [2m([22m[2m18 tests[22m[2m)[22m[32m 25[2mms[22m[39m
 [32m‚úì[39m __tests__/unit/domain/result.test.ts [2m([22m[2m15 tests[22m[2m)[22m[32m 9[2mms[22m[39m
 [31m‚ùØ[39m __tests__/components/PatientForm.test.tsx [2m([22m[2m19 tests[22m[2m | [22m[31m1 failed[39m[2m)[22m[33m 2318[2mms[22m[39m
       [32m‚úì[39m renders all required form sections[32m 71[2mms[22m[39m
       [32m‚úì[39m renders all input fields[32m 46[2mms[22m[39m
       [32m‚úì[39m renders submit button[32m 247[2mms[22m[39m
       [32m‚úì[39m has correct placeholders[32m 52[2mms[22m[39m
       [32m‚úì[39m shows validation error for empty first name[32m 180[2mms[22m[39m
       [32m‚úì[39m shows validation error for empty last name[32m 133[2mms[22m[39m
       [32m‚úì[39m validates MRN is exactly 6 digits[32m 187[2mms[22m[39m
       [33m[2m‚úì[22m[39m accepts valid 6-digit MRN [33m 395[2mms[22m[39m
       [32m‚úì[39m validates NPI is exactly 10 digits[32m 159[2mms[22m[39m
       [32m‚úì[39m accepts valid ICD-10 code[32m 51[2mms[22m[39m
       [33m[2m‚úì[22m[39m navigates to patient detail on successful submission without warnings [33m 606[2mms[22m[39m
       [32m‚úì[39m disables submit button while pending[32m 41[2mms[22m[39m
       [32m‚úì[39m shows "Creating..." text while pending[32m 21[2mms[22m[39m
[31m       [31m√ó[31m displays API error message[39m[32m 14[2mms[22m[39m
       [32m‚úì[39m displays generic error for non-API errors[32m 57[2mms[22m[39m
       [32m‚úì[39m displays fallback error message for unknown errors[32m 13[2mms[22m[39m
       [32m‚úì[39m MRN input has maxLength of 6[32m 16[2mms[22m[39m
       [32m‚úì[39m MRN input has numeric inputMode[32m 7[2mms[22m[39m
       [32m‚úì[39m NPI input has maxLength of 10[32m 20[2mms[22m[39m
 [32m‚úì[39m __tests__/domain/errors.test.ts [2m([22m[2m11 tests[22m[2m)[22m[32m 11[2mms[22m[39m
 [32m‚úì[39m __tests__/infrastructure/retry.test.ts [2m([22m[2m8 tests[22m[2m)[22m[32m 26[2mms[22m[39m
 [32m‚úì[39m __tests__/api/health.test.ts [2m([22m[2m6 tests[22m[2m | [22m[33m3 skipped[39m[2m)[22m[32m 29[2mms[22m[39m
 [32m‚úì[39m __tests__/unit/domain/errors.test.ts [2m([22m[2m19 tests[22m[2m)[22m[32m 29[2mms[22m[39m
 [32m‚úì[39m __tests__/validation/schemas.test.ts [2m([22m[2m17 tests[22m[2m)[22m[32m 24[2mms[22m[39m
 [32m‚úì[39m __tests__/infrastructure/logger.test.ts [2m([22m[2m22 tests[22m[2m)[22m[32m 10[2mms[22m[39m
 [32m‚úì[39m __tests__/validation/icd10-validator.test.ts [2m([22m[2m16 tests[22m[2m)[22m[32m 4[2mms[22m[39m
 [32m‚úì[39m __tests__/infrastructure/env.test.ts [2m([22m[2m9 tests[22m[2m)[22m[32m 7[2mms[22m[39m
 [32m‚úì[39m __tests__/unit/validation/npi-validator.test.ts [2m([22m[2m31 tests[22m[2m)[22m[32m 8[2mms[22m[39m
 [32m‚úì[39m __tests__/validation/npi-validator.test.ts [2m([22m[2m14 tests[22m[2m)[22m[32m 4[2mms[22m[39m
 [32m‚úì[39m __tests__/domain/result.test.ts [2m([22m[2m8 tests[22m[2m)[22m[32m 2[2mms[22m[39m
 [2m[90m‚Üì[39m[22m __tests__/integration/api-client.test.ts [2m([22m[2m2 tests[22m[2m | [22m[33m2 skipped[39m[2m)[22m

[31m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[39m[1m[41m Failed Tests 41 [49m[22m[31m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[39m

[41m[1m FAIL [22m[49m __tests__/components/PatientForm.test.tsx[2m > [22mPatientForm[2m > [22merror handling[2m > [22mdisplays API error message
[31m[1mTestingLibraryElementError[22m[39m: Unable to find an element with the text: /A patient with this information already exists/. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m<body>[39m
  [36m<div>[39m
    [36m<form[39m
      [33mclass[39m=[32m"space-y-8"[39m
    [36m>[39m
      [36m<div[39m
        [33mclass[39m=[32m"relative w-full rounded-lg border px-4 py-3 text-sm grid has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] grid-cols-[0_1fr] has-[>svg]:gap-x-3 gap-y-0.5 items-start [&>svg]:size-4 [&>svg]:translate-y-0.5 text-destructive bg-card [&>svg]:text-current *:data-[slot=alert-description]:text-destructive/90"[39m
        [33mdata-slot[39m=[32m"alert"[39m
        [33mrole[39m=[32m"alert"[39m
      [36m>[39m
        [36m<div[39m
          [33mclass[39m=[32m"text-muted-foreground col-start-2 grid justify-items-start gap-1 text-sm [&_p]:leading-relaxed"[39m
          [33mdata-slot[39m=[32m"alert-description"[39m
        [36m>[39m
          [0mPatient with MRN 123456 already exists[0m
        [36m</div>[39m
      [36m</div>[39m
      [36m<div[39m
        [33mclass[39m=[32m"text-card-foreground flex flex-col gap-6 rounded-xl border shadow-sm p-6 bg-gradient-to-br from-neutral-50 to-neutral-100 dark:from-neutral-900/50 dark:to-neutral-900/30 border-dashed"[39m
        [33mdata-slot[39m=[32m"card"[39m
      [36m>[39m
        [36m<div[39m
          [33mclass[39m=[32m"space-y-4"[39m
        [36m>[39m
          [36m<div>[39m
            [36m<h3[39m
              [33mclass[39m=[32m"text-sm font-semibold text-neutral-900 dark:text-white mb-1"[39m
            [36m>[39m
              [0mTry with Example Data[0m
            [36m</h3>[39m
            [36m<p[39m
              [33mclass[39m=[32m"text-sm text-neutral-600 dark:text-neutral-400"[39m
            [36m>[39m
              [0mLoad curated patient scenarios or generate a new example with AI to explore the application.[0m
            [36m</p>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex flex-col sm:flex-row gap-3"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex-1"[39m
            [36m>[39m
              [36m<select[39m
                [33mclass[39m=[32m"w-full h-10 px-3 rounded-md border border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-950 text-sm text-neutral-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-neutral-400 dark:focus:ring-neutral-600"[39m
              [36m>[39m
                [36m<option[39m
                  [33mvalue[39m=[32m""[39m
                [36m>[39m
                  [0mSelect a curated example...[0m
                [36m</option>[39m
                [36m<option[39m
                  [33mvalue[39m=[32m"myasthenia-gravis"[39m
                [36m>[39m
                  [0mMyasthenia Gravis (IVIG)[0m
                  [0m ‚Ä¢ [0m
                  [0mmoderate[0m
                  [0m ‚Ä¢ [0m
                  [0m46yo female with generalized MG, declining strength, scheduled for thymectomy[0m
                [36m</option>[39m
                [36m<option[39m
                  [33mvalue[39m=[32m"severe-asthma"[39m
                [36m>[39m
                  [0mSevere Asthma (Biologic)[0m
                  [0m ‚Ä¢ [0m
                  [0mmoderate[0m
                  [0m ‚Ä¢ [0m
                  [0m34yo male with severe eosinophilic asthma despite high-dose ICS/LABA[0m
                [36m</option>[39m
                [36m<option[39m
                  [33mvalue[39m=[32m"rheumatoid-arthritis"[39m
                [36m>[39m
                  [0mRheumatoid Arthritis (Infliximab)[0m
                  [0m ‚Ä¢ [0m
                  [0mmoderate[0m
                  [0m ‚Ä¢ [0m
                  [0m52yo female with active RA, inadequate MTX response, starting biologic[0m
                [36m</option>[39m
                [36m<option[39m
                  [33mvalue[39m=[32m"cidp"[39m
                [36m>[39m
                  [0mCIDP (Immune Globulin)[0m
                  [0m ‚Ä¢ [0m
                  [0mcomplex[0m
                  [0m ‚Ä¢ [0m
                  [0m61yo male with chronic inflammatory demyelinating polyneuropathy, progressive weakness[0m
                [36m</option>[39m
                [36m<option[39m
                  [33mvalue[39m=[32m"complex-multi-system"[39m
                [36m>[39m
                  [0mComplex Multi-System (Rituximab)[0m
                  [0m ‚Ä¢ [0m
                  [0mcomplex[0m
                  [0m ‚Ä¢ [0m
                  [0m58yo female with dermatomyositis, ILD, refractory to standard therapy[0m
                [36m</option>[39m
                [36m<option[39m
                  [33mvalue[39m=[32m"simple-case"[39m
                [36m>[39m
                  [0mSimple Case (Omalizumab)[0m
                  [0m ‚Ä¢ [0m
                  [0msimple[0m
                  [0m ‚Ä¢ [0m
                  [0m28yo female with allergic asthma, good candidate for biologic therapy[0m
                [36m</option>[39m
              [36m</select>[39m
            [36m</div>[39m
            [36m<button[39m
              [33mclass[39m=[32m"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50 h-9 px-4 py-2 has-[>svg]:px-3 shrink-0 min-w-[160px] font-medium"[39m
              [33mdata-slot[39m=[32m"button"[39m
              [33mtype[39m=[32m"button"[39m
            [36m>[39m
              [36m<svg[39m
                [33mclass[39m=[32m"mr-2 h-4 w-4"[39m
                [33mfill[39m=[32m"none"[39m
                [33mstroke[39m=[32m"currentColor"[39m
                [33mviewBox[39m=[32m"0 0 24 24"[39m
              [36m>[39m
                [36m<path[39m
                  [33md[39m=[32m"M13 10V3L4 14h7v7l9-11h-7z"[39m
                  [33mstroke-linecap[39m=[32m"round"[39m
                  [33mstroke-linejoin[39m=[32m"round"[39m
                  [33mstroke-width[39m=[32m"2"[39m
                [36m/>[39m
              [36m</svg>[39m
              [0mGenerate with AI[0m
            [36m</button>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex flex-wrap gap-2 pt-2 border-t border-neutral-200 dark:border-neutral-800"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex items-center gap-1.5 text-xs text-neutral-600 dark:text-neutral-400"[39m
            [36m>[39m
         ...
[90m [2m‚ùØ[22m Object.getElementError node_modules/@testing-library/dom/dist/config.js:[2m37:19[22m[39m
[90m [2m‚ùØ[22m node_modules/@testing-library/dom/dist/query-helpers.js:[2m76:38[22m[39m
[90m [2m‚ùØ[22m node_modules/@testing-library/dom/dist/query-helpers.js:[2m52:17[22m[39m
[90m [2m‚ùØ[22m node_modules/@testing-library/dom/dist/query-helpers.js:[2m95:19[22m[39m
[36m [2m‚ùØ[22m __tests__/components/PatientForm.test.tsx:[2m277:16[22m[39m
    [90m275| [39m
    [90m276| [39m      [34mexpect[39m(
    [90m277| [39m        screen.getByText(/A patient with this information already exis‚Ä¶
    [90m   | [39m               [31m^[39m
    [90m278| [39m      )[33m.[39m[34mtoBeInTheDocument[39m()[33m;[39m
    [90m279| [39m    })[33m;[39m

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[1/44]‚éØ[22m[39m

[41m[1m FAIL [22m[49m __tests__/infrastructure/error-handler.test.ts[2m > [22mhandleError[2m > [22mDomain errors[2m > [22mlogs domain errors as warnings
[31m[1mAssertionError[22m: expected "log" to be called at least once[39m
[36m [2m‚ùØ[22m __tests__/infrastructure/error-handler.test.ts:[2m105:29[22m[39m
    [90m103| [39m      [34mhandleError[39m(error)[33m;[39m
    [90m104| [39m
    [90m105| [39m      [34mexpect[39m(consoleLogSpy)[33m.[39m[34mtoHaveBeenCalled[39m()[33m;[39m
    [90m   | [39m                            [31m^[39m
    [90m106| [39m      [35mconst[39m logCall [33m=[39m consoleLogSpy[33m.[39mmock[33m.[39mcalls[[34m0[39m][[34m0[39m][33m;[39m
    [90m107| [39m      [35mconst[39m logData [33m=[39m [33mJSON[39m[33m.[39m[34mparse[39m(logCall)[33m;[39m

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[2/44]‚éØ[22m[39m

[41m[1m FAIL [22m[49m __tests__/infrastructure/error-handler.test.ts[2m > [22mhandleError[2m > [22mZod validation errors[2m > [22mlogs validation errors as warnings
[31m[1mAssertionError[22m: expected "log" to be called at least once[39m
[36m [2m‚ùØ[22m __tests__/infrastructure/error-handler.test.ts:[2m186:29[22m[39m
    [90m184| [39m      [34mhandleError[39m(zodError)[33m;[39m
    [90m185| [39m
    [90m186| [39m      [34mexpect[39m(consoleLogSpy)[33m.[39m[34mtoHaveBeenCalled[39m()[33m;[39m
    [90m   | [39m                            [31m^[39m
    [90m187| [39m      [35mconst[39m logCall [33m=[39m consoleLogSpy[33m.[39mmock[33m.[39mcalls[[34m0[39m][[34m0[39m][33m;[39m
    [90m188| [39m      [35mconst[39m logData [33m=[39m [33mJSON[39m[33m.[39m[34mparse[39m(logCall)[33m;[39m

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[3/44]‚éØ[22m[39m

[41m[1m FAIL [22m[49m __tests__/services/duplicate-detector.test.ts[2m > [22mDuplicateDetector[2m > [22mfindSimilarPatients[2m > [22mexcludes exact MRN matches
[31m[1mPrismaClientKnownRequestError[22m: 
Invalid `prisma.provider.deleteMany()` invocation:


Foreign key constraint violated on the constraint: `orders_provider_id_fkey`[39m
[90m [2m‚ùØ[22m ei.handleRequestError node_modules/.prisma/client/runtime/library.js:[2m124:7268[22m[39m
[90m [2m‚ùØ[22m ei.handleAndLogRequestError node_modules/.prisma/client/runtime/library.js:[2m124:6593[22m[39m
[90m [2m‚ùØ[22m ei.request node_modules/.prisma/client/runtime/library.js:[2m124:6300[22m[39m
[90m [2m‚ùØ[22m a node_modules/.prisma/client/runtime/library.js:[2m133:9551[22m[39m
[36m [2m‚ùØ[22m __tests__/services/duplicate-detector.test.ts:[2m32:5[22m[39m
    [90m 30| [39m    [35mawait[39m prisma[33m.[39mcarePlan[33m.[39m[34mdeleteMany[39m({})[33m;[39m
    [90m 31| [39m    [35mawait[39m prisma[33m.[39mpatient[33m.[39m[34mdeleteMany[39m({})[33m;[39m
    [90m 32| [39m    [35mawait[39m prisma[33m.[39mprovider[33m.[39m[34mdeleteMany[39m({})[33m;[39m
    [90m   | [39m    [31m^[39m
    [90m 33| [39m  })[33m;[39m
    [90m 34| [39m

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[4/44]‚éØ[22m[39m

[41m[1m FAIL [22m[49m __tests__/services/duplicate-detector.test.ts[2m > [22mDuplicateDetector[2m > [22mJaccard similarity algorithm[2m > [22mhandles empty strings gracefully
[31m[1mAssertionError[22m: expected +0 to be 1 // Object.is equality[39m

[32m- Expected[39m
[31m+ Received[39m

[32m- 1[39m
[31m+ 0[39m

[36m [2m‚ùØ[22m __tests__/services/duplicate-detector.test.ts:[2m223:20[22m[39m
    [90m221| [39m      [34mexpect[39m(sim2)[33m.[39m[34mtoBe[39m([34m0.0[39m)[33m;[39m
    [90m222| [39m      [90m// Empty strings are considered identical[39m
    [90m223| [39m      [34mexpect[39m(sim3)[33m.[39m[34mtoBe[39m([34m1.0[39m)[33m;[39m
    [90m   | [39m                   [31m^[39m
    [90m224| [39m    })[33m;[39m
    [90m225| [39m

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[5/44]‚éØ[22m[39m

[41m[1m FAIL [22m[49m __tests__/services/export-service.test.ts[2m > [22mExportService[2m > [22mexportPatientsToCSV[2m > [22mgenerates CSV with correct headers
[41m[1m FAIL [22m[49m __tests__/services/export-service.test.ts[2m > [22mExportService[2m > [22mexportPatientsToCSV[2m > [22mexports patient data correctly
[41m[1m FAIL [22m[49m __tests__/services/export-service.test.ts[2m > [22mExportService[2m > [22mexportPatientsToCSV[2m > [22mhandles empty database
[41m[1m FAIL [22m[49m __tests__/services/export-service.test.ts[2m > [22mExportService[2m > [22mexportPatientsToCSV[2m > [22mescapes CSV special characters correctly
[41m[1m FAIL [22m[49m __tests__/services/export-service.test.ts[2m > [22mExportService[2m > [22mexportPatientsToCSV[2m > [22mhandles multiple patients
[31m[1mPrismaClientKnownRequestError[22m: 
Invalid `prisma.provider.deleteMany()` invocation:


Foreign key constraint violated on the constraint: `orders_provider_id_fkey`[39m
[90m [2m‚ùØ[22m ei.handleRequestError node_modules/.prisma/client/runtime/library.js:[2m124:7268[22m[39m
[90m [2m‚ùØ[22m ei.handleAndLogRequestError node_modules/.prisma/client/runtime/library.js:[2m124:6593[22m[39m
[90m [2m‚ùØ[22m ei.request node_modules/.prisma/client/runtime/library.js:[2m124:6300[22m[39m
[90m [2m‚ùØ[22m a node_modules/.prisma/client/runtime/library.js:[2m133:9551[22m[39m
[36m [2m‚ùØ[22m __tests__/services/export-service.test.ts:[2m25:5[22m[39m
    [90m 23| [39m    [35mawait[39m prisma[33m.[39morder[33m.[39m[34mdeleteMany[39m({})[33m;[39m
    [90m 24| [39m    [35mawait[39m prisma[33m.[39mpatient[33m.[39m[34mdeleteMany[39m({})[33m;[39m
    [90m 25| [39m    [35mawait[39m prisma[33m.[39mprovider[33m.[39m[34mdeleteMany[39m({})[33m;[39m
    [90m   | [39m    [31m^[39m
    [90m 26| [39m  })[33m;[39m
    [90m 27| [39m

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[6/44]‚éØ[22m[39m

[41m[1m FAIL [22m[49m __tests__/services/export-service.test.ts[2m > [22mExportService[2m > [22mexportPatientsToCSV[2m > [22mexports patient data correctly
[31m[1mPrismaClientKnownRequestError[22m: 
Invalid `prisma.provider.create()` invocation:


Unique constraint failed on the fields: (`npi`)[39m
[90m [2m‚ùØ[22m ei.handleRequestError node_modules/.prisma/client/runtime/library.js:[2m124:7268[22m[39m
[90m [2m‚ùØ[22m ei.handleAndLogRequestError node_modules/.prisma/client/runtime/library.js:[2m124:6593[22m[39m
[90m [2m‚ùØ[22m ei.request node_modules/.prisma/client/runtime/library.js:[2m124:6300[22m[39m
[90m [2m‚ùØ[22m a node_modules/.prisma/client/runtime/library.js:[2m133:9551[22m[39m
[36m [2m‚ùØ[22m __tests__/services/export-service.test.ts:[2m49:24[22m[39m
    [90m 47| [39m    [34mit[39m([32m'exports patient data correctly'[39m[33m,[39m [35masync[39m () [33m=>[39m {
    [90m 48| [39m      [90m// Create test data[39m
    [90m 49| [39m      [35mconst[39m provider [33m=[39m [35mawait[39m prisma[33m.[39mprovider[33m.[39m[34mcreate[39m({
    [90m   | [39m                       [31m^[39m
    [90m 50| [39m        data[33m:[39m {
    [90m 51| [39m          name[33m:[39m [32m'Dr. Test'[39m[33m,[39m

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[7/44]‚éØ[22m[39m

[41m[1m FAIL [22m[49m __tests__/services/export-service.test.ts[2m > [22mExportService[2m > [22mexportPatientsToCSV[2m > [22mhandles empty database
[31m[1mAssertionError[22m: expected 2 to be 1 // Object.is equality[39m

[32m- Expected[39m
[31m+ Received[39m

[32m- 1[39m
[31m+ 2[39m

[36m [2m‚ùØ[22m __tests__/services/export-service.test.ts:[2m100:30[22m[39m
    [90m 98| [39m        [35mconst[39m lines [33m=[39m result[33m.[39mdata[33m.[39m[34msplit[39m([32m'\n'[39m)[33m;[39m
    [90m 99| [39m        [90m// Should have header row only[39m
    [90m100| [39m        [34mexpect[39m(lines[33m.[39mlength)[33m.[39m[34mtoBe[39m([34m1[39m)[33m;[39m
    [90m   | [39m                             [31m^[39m
    [90m101| [39m      }
    [90m102| [39m    })[33m;[39m

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[8/44]‚éØ[22m[39m

[41m[1m FAIL [22m[49m __tests__/services/export-service.test.ts[2m > [22mExportService[2m > [22mexportPatientsToCSV[2m > [22mhandles multiple patients
[31m[1mPrismaClientKnownRequestError[22m: 
Invalid `prisma.provider.create()` invocation:


Unique constraint failed on the fields: (`npi`)[39m
[90m [2m‚ùØ[22m ei.handleRequestError node_modules/.prisma/client/runtime/library.js:[2m124:7268[22m[39m
[90m [2m‚ùØ[22m ei.handleAndLogRequestError node_modules/.prisma/client/runtime/library.js:[2m124:6593[22m[39m
[90m [2m‚ùØ[22m ei.request node_modules/.prisma/client/runtime/library.js:[2m124:6300[22m[39m
[90m [2m‚ùØ[22m a node_modules/.prisma/client/runtime/library.js:[2m133:9551[22m[39m
[36m [2m‚ùØ[22m __tests__/services/export-service.test.ts:[2m144:24[22m[39m
    [90m142| [39m
    [90m143| [39m    [34mit[39m([32m'handles multiple patients'[39m[33m,[39m [35masync[39m () [33m=>[39m {
    [90m144| [39m      [35mconst[39m provider [33m=[39m [35mawait[39m prisma[33m.[39mprovider[33m.[39m[34mcreate[39m({
    [90m   | [39m                       [31m^[39m
    [90m145| [39m        data[33m:[39m {
    [90m146| [39m          name[33m:[39m [32m'Dr. Test'[39m[33m,[39m

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[9/44]‚éØ[22m[39m

[41m[1m FAIL [22m[49m __tests__/services/export-service.test.ts[2m > [22mExportService[2m > [22mexportPatientsToCSV[2m > [22mincludes care plan status
[31m[1mPrismaClientKnownRequestError[22m: 
Invalid `prisma.provider.create()` invocation:


Unique constraint failed on the fields: (`npi`)[39m
[90m [2m‚ùØ[22m ei.handleRequestError node_modules/.prisma/client/runtime/library.js:[2m124:7268[22m[39m
[90m [2m‚ùØ[22m ei.handleAndLogRequestError node_modules/.prisma/client/runtime/library.js:[2m124:6593[22m[39m
[90m [2m‚ùØ[22m ei.request node_modules/.prisma/client/runtime/library.js:[2m124:6300[22m[39m
[90m [2m‚ùØ[22m a node_modules/.prisma/client/runtime/library.js:[2m133:9551[22m[39m
[36m [2m‚ùØ[22m __tests__/services/export-service.test.ts:[2m190:24[22m[39m
    [90m188| [39m
    [90m189| [39m    [34mit[39m([32m'includes care plan status'[39m[33m,[39m [35masync[39m () [33m=>[39m {
    [90m190| [39m      [35mconst[39m provider [33m=[39m [35mawait[39m prisma[33m.[39mprovider[33m.[39m[34mcreate[39m({
    [90m   | [39m                       [31m^[39m
    [90m191| [39m        data[33m:[39m {
    [90m192| [39m          name[33m:[39m [32m'Dr. Test'[39m[33m,[39m

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[10/44]‚éØ[22m[39m

[41m[1m FAIL [22m[49m __tests__/services/patient-service.test.ts[2m > [22mPatientService Integration[2m > [22mcreatePatient[2m > [22mcreates patient with provider and order in single transaction
[41m[1m FAIL [22m[49m __tests__/services/patient-service.test.ts[2m > [22mPatientService Integration[2m > [22mcreatePatient[2m > [22mrejects duplicate MRN with error
[41m[1m FAIL [22m[49m __tests__/services/patient-service.test.ts[2m > [22mPatientService Integration[2m > [22mcreatePatient[2m > [22mreuses existing provider when NPI and name match
[31m[1mPrismaClientKnownRequestError[22m: 
Invalid `prisma.provider.deleteMany()` invocation:


Foreign key constraint violated on the constraint: `orders_provider_id_fkey`[39m
[90m [2m‚ùØ[22m ei.handleRequestError node_modules/.prisma/client/runtime/library.js:[2m124:7268[22m[39m
[90m [2m‚ùØ[22m ei.handleAndLogRequestError node_modules/.prisma/client/runtime/library.js:[2m124:6593[22m[39m
[90m [2m‚ùØ[22m ei.request node_modules/.prisma/client/runtime/library.js:[2m124:6300[22m[39m
[90m [2m‚ùØ[22m a node_modules/.prisma/client/runtime/library.js:[2m133:9551[22m[39m
[36m [2m‚ùØ[22m __tests__/services/patient-service.test.ts:[2m44:5[22m[39m
    [90m 42| [39m    [35mawait[39m prisma[33m.[39mcarePlan[33m.[39m[34mdeleteMany[39m({})[33m;[39m
    [90m 43| [39m    [35mawait[39m prisma[33m.[39mpatient[33m.[39m[34mdeleteMany[39m({})[33m;[39m
    [90m 44| [39m    [35mawait[39m prisma[33m.[39mprovider[33m.[39m[34mdeleteMany[39m({})[33m;[39m
    [90m   | [39m    [31m^[39m
    [90m 45| [39m  })[33m;[39m
    [90m 46| [39m

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[11/44]‚éØ[22m[39m

[41m[1m FAIL [22m[49m __tests__/services/patient-service.test.ts[2m > [22mPatientService Integration[2m > [22mcreatePatient[2m > [22mdetects duplicate orders within 30 days
[31m[1mAssertionError[22m: expected false to be true // Object.is equality[39m

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

[36m [2m‚ùØ[22m __tests__/services/patient-service.test.ts:[2m259:34[22m[39m
    [90m257| [39m      })[33m;[39m
    [90m258| [39m
    [90m259| [39m      [34mexpect[39m([34misSuccess[39m(result1))[33m.[39m[34mtoBe[39m([35mtrue[39m)[33m;[39m
    [90m   | [39m                                 [31m^[39m
    [90m260| [39m
    [90m261| [39m      [35mif[39m ([34misSuccess[39m(result1)) {

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[12/44]‚éØ[22m[39m

[41m[1m FAIL [22m[49m __tests__/services/patient-service.test.ts[2m > [22mPatientService Integration[2m > [22mcreatePatient[2m > [22mhandles minimal required fields (no optional arrays)
[31m[1mAssertionError[22m: expected false to be true // Object.is equality[39m

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

[36m [2m‚ùØ[22m __tests__/services/patient-service.test.ts:[2m315:33[22m[39m
    [90m313| [39m      })[33m;[39m
    [90m314| [39m
    [90m315| [39m      [34mexpect[39m([34misSuccess[39m(result))[33m.[39m[34mtoBe[39m([35mtrue[39m)[33m;[39m
    [90m   | [39m                                [31m^[39m
    [90m316| [39m
    [90m317| [39m      [35mif[39m ([34misSuccess[39m(result)) {

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[13/44]‚éØ[22m[39m

[41m[1m FAIL [22m[49m __tests__/services/patient-service.test.ts[2m > [22mPatientService Integration[2m > [22mlistRecentPatients[2m > [22mreturns patients ordered by creation date
[31m[1mAssertionError[22m: expected 1 to be greater than or equal to 2[39m
[36m [2m‚ùØ[22m __tests__/services/patient-service.test.ts:[2m403:31[22m[39m
    [90m401| [39m      [35mconst[39m patients [33m=[39m [35mawait[39m patientService[33m.[39m[34mlistRecentPatients[39m([34m10[39m)[33m;[39m
    [90m402| [39m
    [90m403| [39m      [34mexpect[39m(patients[33m.[39mlength)[33m.[39m[34mtoBeGreaterThanOrEqual[39m([34m2[39m)[33m;[39m
    [90m   | [39m                              [31m^[39m
    [90m404| [39m      [90m// Most recent should be first[39m
    [90m405| [39m      [34mexpect[39m(patients[[34m0[39m][33m.[39mmrn)[33m.[39m[34mtoBe[39m([32m'100012'[39m)[33m;[39m

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[14/44]‚éØ[22m[39m

[41m[1m FAIL [22m[49m __tests__/services/provider-service.test.ts[2m > [22mProviderService[2m > [22mupsertProvider[2m > [22mreturns existing provider when NPI and name match
[31m[1mAssertionError[22m: expected 'cmhar9cjj00028cc5h2nm9kde' to be 'cmhar9cjd00018cc546m9ifu4' // Object.is equality[39m

Expected: [32m"cmhar9cj[7md[27m000[7m1[27m8cc5[7m46m9ifu4[27m"[39m
Received: [31m"cmhar9cj[7mj[27m000[7m2[27m8cc5[7mh2nm9kde[27m"[39m

[36m [2m‚ùØ[22m __tests__/services/provider-service.test.ts:[2m64:34[22m[39m
    [90m 62| [39m
    [90m 63| [39m      [90m// Should return same provider[39m
    [90m 64| [39m      [34mexpect[39m(second[33m.[39mprovider[33m.[39mid)[33m.[39m[34mtoBe[39m(first[33m.[39mprovider[33m.[39mid)[33m;[39m
    [90m   | [39m                                 [31m^[39m
    [90m 65| [39m      [34mexpect[39m(second[33m.[39mprovider[33m.[39mname)[33m.[39m[34mtoBe[39m(first[33m.[39mprovider[33m.[39mname)[33m;[39m
    [90m 66| [39m      [34mexpect[39m(second[33m.[39mprovider[33m.[39mnpi)[33m.[39m[34mtoBe[39m(first[33m.[39mprovider[33m.[39mnpi)[33m;[39m

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[15/44]‚éØ[22m[39m

[41m[1m FAIL [22m[49m __tests__/services/seed-service.test.ts[2m > [22mSeedService[2m > [22mseedDemoData[2m > [22mcreates patients with valid data
[31m[1mAssertionError[22m: expected 0 to be greater than 0[39m
[36m [2m‚ùØ[22m __tests__/services/seed-service.test.ts:[2m65:31[22m[39m
    [90m 63| [39m      [35mconst[39m patients [33m=[39m [35mawait[39m prisma[33m.[39mpatient[33m.[39m[34mfindMany[39m()[33m;[39m
    [90m 64| [39m
    [90m 65| [39m      [34mexpect[39m(patients[33m.[39mlength)[33m.[39m[34mtoBeGreaterThan[39m([34m0[39m)[33m;[39m
    [90m   | [39m                              [31m^[39m
    [90m 66| [39m
    [90m 67| [39m      [35mfor[39m ([35mconst[39m patient [35mof[39m patients) {

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[16/44]‚éØ[22m[39m

[41m[1m FAIL [22m[49m __tests__/unit/services/care-plan-service.test.ts[2m > [22mCarePlanService[2m > [22mgenerateCarePlan[2m > [22mshould generate care plan for valid patient
[31m[1mError[22m: Expected result to be success, but it was failure with error: Failed to generate care plan: Cannot generate care plan: patient has no medication orders[39m
[36m [2m‚ùØ[22m __tests__/unit/services/care-plan-service.test.ts:[2m124:22[22m[39m
    [90m122| [39m      })[33m;[39m
    [90m123| [39m
    [90m124| [39m      [34mexpect[39m(result)[33m.[39m[34mtoBeSuccess[39m()[33m;[39m
    [90m   | [39m                     [31m^[39m
    [90m125| [39m      [35mif[39m (result[33m.[39msuccess) {
    [90m126| [39m        [34mexpect[39m(result[33m.[39mdata[33m.[39mcarePlan[33m.[39mcontent)[33m.[39m[34mtoBeDefined[39m()[33m;[39m

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[17/44]‚éØ[22m[39m

[41m[1m FAIL [22m[49m __tests__/unit/services/care-plan-service.test.ts[2m > [22mCarePlanService[2m > [22mgenerateCarePlan[2m > [22mshould handle LLM timeout
[31m[1mPrismaClientKnownRequestError[22m: 
Invalid `prisma.patient.create()` invocation:


Unique constraint failed on the fields: (`mrn`)[39m
[90m [2m‚ùØ[22m ei.handleRequestError node_modules/.prisma/client/runtime/library.js:[2m124:7268[22m[39m
[90m [2m‚ùØ[22m ei.handleAndLogRequestError node_modules/.prisma/client/runtime/library.js:[2m124:6593[22m[39m
[90m [2m‚ùØ[22m ei.request node_modules/.prisma/client/runtime/library.js:[2m124:6300[22m[39m
[90m [2m‚ùØ[22m a node_modules/.prisma/client/runtime/library.js:[2m133:9551[22m[39m
[36m [2m‚ùØ[22m __tests__/unit/services/care-plan-service.test.ts:[2m183:23[22m[39m
    [90m181| [39m      })[33m;[39m
    [90m182| [39m
    [90m183| [39m      [35mconst[39m patient [33m=[39m [35mawait[39m testDb[33m.[39mpatient[33m.[39m[34mcreate[39m({
    [90m   | [39m                      [31m^[39m
    [90m184| [39m        data[33m:[39m {
    [90m185| [39m          firstName[33m:[39m [32m'John'[39m[33m,[39m

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[18/44]‚éØ[22m[39m

[41m[1m FAIL [22m[49m __tests__/unit/services/care-plan-service.test.ts[2m > [22mCarePlanService[2m > [22mgenerateCarePlan[2m > [22mshould handle LLM API error
[31m[1mPrismaClientKnownRequestError[22m: 
Invalid `prisma.patient.create()` invocation:


Unique constraint failed on the fields: (`mrn`)[39m
[90m [2m‚ùØ[22m ei.handleRequestError node_modules/.prisma/client/runtime/library.js:[2m124:7268[22m[39m
[90m [2m‚ùØ[22m ei.handleAndLogRequestError node_modules/.prisma/client/runtime/library.js:[2m124:6593[22m[39m
[90m [2m‚ùØ[22m ei.request node_modules/.prisma/client/runtime/library.js:[2m124:6300[22m[39m
[90m [2m‚ùØ[22m a node_modules/.prisma/client/runtime/library.js:[2m133:9551[22m[39m
[36m [2m‚ùØ[22m __tests__/unit/services/care-plan-service.test.ts:[2m227:23[22m[39m
    [90m225| [39m      })[33m;[39m
    [90m226| [39m
    [90m227| [39m      [35mconst[39m patient [33m=[39m [35mawait[39m testDb[33m.[39mpatient[33m.[39m[34mcreate[39m({
    [90m   | [39m                      [31m^[39m
    [90m228| [39m        data[33m:[39m {
    [90m229| [39m          firstName[33m:[39m [32m'John'[39m[33m,[39m

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[19/44]‚éØ[22m[39m

[41m[1m FAIL [22m[49m __tests__/unit/services/care-plan-service.test.ts[2m > [22mCarePlanService[2m > [22mgenerateCarePlan[2m > [22mshould save care plan to database
[31m[1mPrismaClientKnownRequestError[22m: 
Invalid `prisma.order.create()` invocation:


Foreign key constraint violated on the constraint: `orders_provider_id_fkey`[39m
[90m [2m‚ùØ[22m ei.handleRequestError node_modules/.prisma/client/runtime/library.js:[2m124:7268[22m[39m
[90m [2m‚ùØ[22m ei.handleAndLogRequestError node_modules/.prisma/client/runtime/library.js:[2m124:6593[22m[39m
[90m [2m‚ùØ[22m ei.request node_modules/.prisma/client/runtime/library.js:[2m124:6300[22m[39m
[90m [2m‚ùØ[22m a node_modules/.prisma/client/runtime/library.js:[2m133:9551[22m[39m
[36m [2m‚ùØ[22m __tests__/unit/services/care-plan-service.test.ts:[2m285:7[22m[39m
    [90m283| [39m      })[33m;[39m
    [90m284| [39m
    [90m285| [39m      [35mawait[39m testDb[33m.[39morder[33m.[39m[34mcreate[39m({
    [90m   | [39m      [31m^[39m
    [90m286| [39m        data[33m:[39m {
    [90m287| [39m          patientId[33m:[39m patient[33m.[39mid[33m,[39m

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[20/44]‚éØ[22m[39m

[41m[1m FAIL [22m[49m __tests__/unit/services/care-plan-service.test.ts[2m > [22mCarePlanService[2m > [22mgenerateCarePlan[2m > [22mshould validate response is not empty
[31m[1mAssertionError[22m: expected 'Patient with ID cmhar9b3g000k8cbh1k7g‚Ä¶' to contain 'too short'[39m

Expected: [32m"too short"[39m
Received: [31m"Patient with ID cmhar9b3g000k8cbh1k7g6ddi not found"[39m

[36m [2m‚ùØ[22m __tests__/unit/services/care-plan-service.test.ts:[2m399:38[22m[39m
    [90m397| [39m      [34mexpect[39m(result)[33m.[39m[34mtoBeFailure[39m()[33m;[39m
    [90m398| [39m      [35mif[39m ([33m![39mresult[33m.[39msuccess) {
    [90m399| [39m        [34mexpect[39m(result[33m.[39merror[33m.[39mmessage)[33m.[39m[34mtoContain[39m([32m'too short'[39m)[33m;[39m
    [90m   | [39m                                     [31m^[39m
    [90m400| [39m      }
    [90m401| [39m    })[33m;[39m

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[21/44]‚éØ[22m[39m

[41m[1m FAIL [22m[49m __tests__/unit/services/care-plan-service.test.ts[2m > [22mCarePlanService[2m > [22mgetCarePlansForPatient[2m > [22mshould return care plans in descending order by creation date
[31m[1mPrismaClientKnownRequestError[22m: 
Invalid `prisma.patient.create()` invocation:


Unique constraint failed on the fields: (`mrn`)[39m
[90m [2m‚ùØ[22m ei.handleRequestError node_modules/.prisma/client/runtime/library.js:[2m124:7268[22m[39m
[90m [2m‚ùØ[22m ei.handleAndLogRequestError node_modules/.prisma/client/runtime/library.js:[2m124:6593[22m[39m
[90m [2m‚ùØ[22m ei.request node_modules/.prisma/client/runtime/library.js:[2m124:6300[22m[39m
[90m [2m‚ùØ[22m a node_modules/.prisma/client/runtime/library.js:[2m133:9551[22m[39m
[36m [2m‚ùØ[22m __tests__/unit/services/care-plan-service.test.ts:[2m457:23[22m[39m
    [90m455| [39m
    [90m456| [39m    it('should return care plans in descending order by creation date'‚Ä¶
    [90m457| [39m      [35mconst[39m patient [33m=[39m [35mawait[39m testDb[33m.[39mpatient[33m.[39m[34mcreate[39m({
    [90m   | [39m                      [31m^[39m
    [90m458| [39m        data[33m:[39m {
    [90m459| [39m          firstName[33m:[39m [32m'John'[39m[33m,[39m

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[22/44]‚éØ[22m[39m

[41m[1m FAIL [22m[49m __tests__/unit/services/care-plan-service.test.ts[2m > [22mCarePlanService[2m > [22mPrompt Construction[2m > [22mshould build prompt with patient information
[31m[1mAssertionError[22m: expected '' to contain 'John Doe'[39m

[32m- Expected[39m
[31m+ Received[39m

[32m- John Doe[39m

[36m [2m‚ùØ[22m __tests__/unit/services/care-plan-service.test.ts:[2m545:30[22m[39m
    [90m543| [39m
    [90m544| [39m      [90m// Verify prompt contains patient data[39m
    [90m545| [39m      [34mexpect[39m(capturedPrompt)[33m.[39m[34mtoContain[39m([32m'John Doe'[39m)[33m;[39m
    [90m   | [39m                             [31m^[39m
    [90m546| [39m      [34mexpect[39m(capturedPrompt)[33m.[39m[34mtoContain[39m([32m'123456'[39m)[33m;[39m
    [90m547| [39m      [34mexpect[39m(capturedPrompt)[33m.[39m[34mtoContain[39m([32m'IVIG'[39m)[33m;[39m

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[23/44]‚éØ[22m[39m

[41m[1m FAIL [22m[49m __tests__/unit/services/duplicate-detector.test.ts[2m > [22mDuplicateDetector[2m > [22mfindSimilarPatients[2m > [22mshould find exact name match (different MRN)
[31m[1mAssertionError[22m: expected [] to have a length of 1 but got +0[39m

[32m- Expected[39m
[31m+ Received[39m

[32m- 1[39m
[31m+ 0[39m

[36m [2m‚ùØ[22m __tests__/unit/services/duplicate-detector.test.ts:[2m48:24[22m[39m
    [90m 46| [39m      )[33m;[39m
    [90m 47| [39m
    [90m 48| [39m      [34mexpect[39m(warnings)[33m.[39m[34mtoHaveLength[39m([34m1[39m)[33m;[39m
    [90m   | [39m                       [31m^[39m
    [90m 49| [39m      [34mexpect[39m(warnings[[34m0[39m][33m.[39mtype)[33m.[39m[34mtoBe[39m([32m'SIMILAR_PATIENT'[39m)[33m;[39m
    [90m 50| [39m      [90m// Exact name match but completely different MRN[39m

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[24/44]‚éØ[22m[39m

[41m[1m FAIL [22m[49m __tests__/unit/services/duplicate-detector.test.ts[2m > [22mDuplicateDetector[2m > [22mfindSimilarPatients[2m > [22mshould find fuzzy name match
[41m[1m FAIL [22m[49m __tests__/unit/services/duplicate-detector.test.ts[2m > [22mDuplicateDetector[2m > [22mfindDuplicateOrders[2m > [22mshould handle case-insensitive medication names
[41m[1m FAIL [22m[49m __tests__/unit/services/duplicate-detector.test.ts[2m > [22mDuplicateDetector[2m > [22mJaccard Similarity Algorithm[2m > [22mshould return 1.0 for identical strings
[31m[1mPrismaClientKnownRequestError[22m: 
Invalid `prisma.provider.deleteMany()` invocation:


Foreign key constraint violated on the constraint: `orders_provider_id_fkey`[39m
[90m [2m‚ùØ[22m ei.handleRequestError node_modules/.prisma/client/runtime/library.js:[2m124:7268[22m[39m
[90m [2m‚ùØ[22m ei.handleAndLogRequestError node_modules/.prisma/client/runtime/library.js:[2m124:6593[22m[39m
[90m [2m‚ùØ[22m ei.request node_modules/.prisma/client/runtime/library.js:[2m124:6300[22m[39m
[90m [2m‚ùØ[22m a node_modules/.prisma/client/runtime/library.js:[2m133:9551[22m[39m
[36m [2m‚ùØ[22m cleanDatabase __tests__/helpers/test-db.ts:[2m34:3[22m[39m
    [90m 32| [39m  [35mawait[39m testDb[33m.[39morder[33m.[39m[34mdeleteMany[39m()[33m;[39m
    [90m 33| [39m  [35mawait[39m testDb[33m.[39mpatient[33m.[39m[34mdeleteMany[39m()[33m;[39m
    [90m 34| [39m  [35mawait[39m testDb[33m.[39mprovider[33m.[39m[34mdeleteMany[39m()[33m;[39m
    [90m   | [39m  [31m^[39m
    [90m 35| [39m}
    [90m 36| [39m
[90m [2m‚ùØ[22m setupTestDb __tests__/helpers/test-db.ts:[2m92:3[22m[39m
[90m [2m‚ùØ[22m __tests__/unit/services/duplicate-detector.test.ts:[2m16:5[22m[39m

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[25/44]‚éØ[22m[39m

[41m[1m FAIL [22m[49m __tests__/unit/services/duplicate-detector.test.ts[2m > [22mDuplicateDetector[2m > [22mfindSimilarPatients[2m > [22mshould calculate similarity score correctly
[31m[1mTypeError[22m: Cannot read properties of undefined (reading 'similarityScore')[39m
[36m [2m‚ùØ[22m __tests__/unit/services/duplicate-detector.test.ts:[2m221:26[22m[39m
    [90m219| [39m      )[33m;[39m
    [90m220| [39m
    [90m221| [39m      [34mexpect[39m(warnings[[34m0[39m][33m.[39msimilarityScore)[33m.[39m[34mtoBeGreaterThan[39m([34m0[39m)[33m;[39m
    [90m   | [39m                         [31m^[39m
    [90m222| [39m      [34mexpect[39m(warnings[[34m0[39m][33m.[39msimilarityScore)[33m.[39m[34mtoBeLessThanOrEqual[39m([34m1[39m)[33m;[39m
    [90m223| [39m    })[33m;[39m

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[26/44]‚éØ[22m[39m

[41m[1m FAIL [22m[49m __tests__/unit/services/duplicate-detector.test.ts[2m > [22mDuplicateDetector[2m > [22mfindDuplicateOrders[2m > [22mshould find duplicate order for same patient and medication
[31m[1mPrismaClientKnownRequestError[22m: 
Invalid `prisma.order.create()` invocation:


Foreign key constraint violated on the constraint: `orders_patient_id_fkey`[39m
[90m [2m‚ùØ[22m ei.handleRequestError node_modules/.prisma/client/runtime/library.js:[2m124:7268[22m[39m
[90m [2m‚ùØ[22m ei.handleAndLogRequestError node_modules/.prisma/client/runtime/library.js:[2m124:6593[22m[39m
[90m [2m‚ùØ[22m ei.request node_modules/.prisma/client/runtime/library.js:[2m124:6300[22m[39m
[90m [2m‚ùØ[22m a node_modules/.prisma/client/runtime/library.js:[2m133:9551[22m[39m
[36m [2m‚ùØ[22m __tests__/unit/services/duplicate-detector.test.ts:[2m274:7[22m[39m
    [90m272| [39m
    [90m273| [39m      [90m// Create existing order[39m
    [90m274| [39m      [35mawait[39m testDb[33m.[39morder[33m.[39m[34mcreate[39m({
    [90m   | [39m      [31m^[39m
    [90m275| [39m        data[33m:[39m {
    [90m276| [39m          patientId[33m:[39m patient[33m.[39mid[33m,[39m

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[27/44]‚éØ[22m[39m

[41m[1m FAIL [22m[49m __tests__/unit/services/duplicate-detector.test.ts[2m > [22mDuplicateDetector[2m > [22mfindDuplicateOrders[2m > [22mshould not flag order for different patient
[31m[1mPrismaClientKnownRequestError[22m: 
Invalid `prisma.order.create()` invocation:


Foreign key constraint violated on the constraint: `orders_patient_id_fkey`[39m
[90m [2m‚ùØ[22m ei.handleRequestError node_modules/.prisma/client/runtime/library.js:[2m124:7268[22m[39m
[90m [2m‚ùØ[22m ei.handleAndLogRequestError node_modules/.prisma/client/runtime/library.js:[2m124:6593[22m[39m
[90m [2m‚ùØ[22m ei.request node_modules/.prisma/client/runtime/library.js:[2m124:6300[22m[39m
[90m [2m‚ùØ[22m a node_modules/.prisma/client/runtime/library.js:[2m133:9551[22m[39m
[36m [2m‚ùØ[22m __tests__/unit/services/duplicate-detector.test.ts:[2m409:7[22m[39m
    [90m407| [39m      })[33m;[39m
    [90m408| [39m
    [90m409| [39m      [35mawait[39m testDb[33m.[39morder[33m.[39m[34mcreate[39m({
    [90m   | [39m      [31m^[39m
    [90m410| [39m        data[33m:[39m {
    [90m411| [39m          patientId[33m:[39m patient1[33m.[39mid[33m,[39m

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[28/44]‚éØ[22m[39m

[41m[1m FAIL [22m[49m __tests__/unit/services/duplicate-detector.test.ts[2m > [22mDuplicateDetector[2m > [22mfindDuplicateOrders[2m > [22mshould only flag orders within 30 days
[31m[1mPrismaClientKnownRequestError[22m: 
Invalid `prisma.order.create()` invocation:


Foreign key constraint violated on the constraint: `orders_patient_id_fkey`[39m
[90m [2m‚ùØ[22m ei.handleRequestError node_modules/.prisma/client/runtime/library.js:[2m124:7268[22m[39m
[90m [2m‚ùØ[22m ei.handleAndLogRequestError node_modules/.prisma/client/runtime/library.js:[2m124:6593[22m[39m
[90m [2m‚ùØ[22m ei.request node_modules/.prisma/client/runtime/library.js:[2m124:6300[22m[39m
[90m [2m‚ùØ[22m a node_modules/.prisma/client/runtime/library.js:[2m133:9551[22m[39m
[36m [2m‚ùØ[22m __tests__/unit/services/duplicate-detector.test.ts:[2m453:7[22m[39m
    [90m451| [39m      oldDate[33m.[39m[34msetDate[39m(oldDate[33m.[39m[34mgetDate[39m() [33m-[39m [34m31[39m)[33m;[39m
    [90m452| [39m
    [90m453| [39m      [35mawait[39m testDb[33m.[39morder[33m.[39m[34mcreate[39m({
    [90m   | [39m      [31m^[39m
    [90m454| [39m        data[33m:[39m {
    [90m455| [39m          patientId[33m:[39m patient[33m.[39mid[33m,[39m

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[29/44]‚éØ[22m[39m

[41m[1m FAIL [22m[49m __tests__/unit/services/duplicate-detector.test.ts[2m > [22mDuplicateDetector[2m > [22mfindDuplicateOrders[2m > [22mshould return multiple duplicate orders if they exist
[31m[1mAssertionError[22m: expected 0 to be greater than or equal to 2[39m
[36m [2m‚ùØ[22m __tests__/unit/services/duplicate-detector.test.ts:[2m523:31[22m[39m
    [90m521| [39m      )[33m;[39m
    [90m522| [39m
    [90m523| [39m      [34mexpect[39m(warnings[33m.[39mlength)[33m.[39m[34mtoBeGreaterThanOrEqual[39m([34m2[39m)[33m;[39m
    [90m   | [39m                              [31m^[39m
    [90m524| [39m    })[33m;[39m
    [90m525| [39m  })[33m;[39m

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[30/44]‚éØ[22m[39m

[41m[1m FAIL [22m[49m __tests__/unit/validation/icd10-validator.test.ts[2m > [22mICD-10 Validator[2m > [22mEdge Cases[2m > [22mshould handle maximum length valid code
[31m[1mAssertionError[22m: expected true to be false // Object.is equality[39m

[32m- Expected[39m
[31m+ Received[39m

[32m- false[39m
[31m+ true[39m

[36m [2m‚ùØ[22m __tests__/unit/validation/icd10-validator.test.ts:[2m309:28[22m[39m
    [90m307| [39m
    [90m308| [39m      [90m// This should fail (too many decimal digits)[39m
    [90m309| [39m      [34mexpect[39m(result[33m.[39mvalid)[33m.[39m[34mtoBe[39m([35mfalse[39m)[33m;[39m
    [90m   | [39m                           [31m^[39m
    [90m310| [39m    })[33m;[39m
    [90m311| [39m

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[31/44]‚éØ[22m[39m

[41m[1m FAIL [22m[49m __tests__/integration/api/patients.integration.test.ts[2m > [22mPatient API Integration[2m > [22mPOST /api/patients[2m > [22mshould create patient and order atomically
[31m[1mAssertionError[22m: expected [] to have a length of 1 but got +0[39m

[32m- Expected[39m
[31m+ Received[39m

[32m- 1[39m
[31m+ 0[39m

[36m [2m‚ùØ[22m __tests__/integration/api/patients.integration.test.ts:[2m94:24[22m[39m
    [90m 92| [39m        })[33m;[39m
    [90m 93| [39m
    [90m 94| [39m        [34mexpect[39m(orders)[33m.[39m[34mtoHaveLength[39m([34m1[39m)[33m;[39m
    [90m   | [39m                       [31m^[39m
    [90m 95| [39m        [34mexpect[39m(orders[[34m0[39m][33m.[39mmedicationName)[33m.[39m[34mtoBe[39m(input[33m.[39mmedicationName)[33m;[39m
    [90m 96| [39m        expect(orders[0].primaryDiagnosis).toBe(input.primaryDiagnosis‚Ä¶

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[32/44]‚éØ[22m[39m

[41m[1m FAIL [22m[49m __tests__/integration/api/patients.integration.test.ts[2m > [22mPatient API Integration[2m > [22mPOST /api/patients[2m > [22mshould reject duplicate MRN
[41m[1m FAIL [22m[49m __tests__/integration/api/patients.integration.test.ts[2m > [22mPatient API Integration[2m > [22mGET /api/patients/[id][2m > [22mshould return null for non-existent patient
[31m[1mPrismaClientKnownRequestError[22m: 
Invalid `prisma.provider.deleteMany()` invocation:


Foreign key constraint violated on the constraint: `orders_provider_id_fkey`[39m
[90m [2m‚ùØ[22m ei.handleRequestError node_modules/.prisma/client/runtime/library.js:[2m124:7268[22m[39m
[90m [2m‚ùØ[22m ei.handleAndLogRequestError node_modules/.prisma/client/runtime/library.js:[2m124:6593[22m[39m
[90m [2m‚ùØ[22m ei.request node_modules/.prisma/client/runtime/library.js:[2m124:6300[22m[39m
[90m [2m‚ùØ[22m a node_modules/.prisma/client/runtime/library.js:[2m133:9551[22m[39m
[36m [2m‚ùØ[22m cleanDatabase __tests__/helpers/test-db.ts:[2m34:3[22m[39m
    [90m 32| [39m  [35mawait[39m testDb[33m.[39morder[33m.[39m[34mdeleteMany[39m()[33m;[39m
    [90m 33| [39m  [35mawait[39m testDb[33m.[39mpatient[33m.[39m[34mdeleteMany[39m()[33m;[39m
    [90m 34| [39m  [35mawait[39m testDb[33m.[39mprovider[33m.[39m[34mdeleteMany[39m()[33m;[39m
    [90m   | [39m  [31m^[39m
    [90m 35| [39m}
    [90m 36| [39m
[90m [2m‚ùØ[22m setupTestDb __tests__/helpers/test-db.ts:[2m92:3[22m[39m
[90m [2m‚ùØ[22m __tests__/integration/api/patients.integration.test.ts:[2m20:5[22m[39m

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[33/44]‚éØ[22m[39m

[41m[1m FAIL [22m[49m __tests__/integration/api/patients.integration.test.ts[2m > [22mPatient API Integration[2m > [22mPOST /api/patients[2m > [22mshould reuse existing provider with same NPI
[31m[1mAssertionError[22m: expected [] to have a length of 1 but got +0[39m

[32m- Expected[39m
[31m+ Received[39m

[32m- 1[39m
[31m+ 0[39m

[36m [2m‚ùØ[22m __tests__/integration/api/patients.integration.test.ts:[2m188:25[22m[39m
    [90m186| [39m      })[33m;[39m
    [90m187| [39m
    [90m188| [39m      [34mexpect[39m(providers)[33m.[39m[34mtoHaveLength[39m([34m1[39m)[33m;[39m
    [90m   | [39m                        [31m^[39m
    [90m189| [39m    })[33m;[39m
    [90m190| [39m

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[34/44]‚éØ[22m[39m

[41m[1m FAIL [22m[49m __tests__/integration/api/patients.integration.test.ts[2m > [22mPatient API Integration[2m > [22mPOST /api/patients[2m > [22mshould warn on provider name mismatch for same NPI
[31m[1mAssertionError[22m: expected false to be true // Object.is equality[39m

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

[36m [2m‚ùØ[22m __tests__/integration/api/patients.integration.test.ts:[2m218:30[22m[39m
    [90m216| [39m      [35mconst[39m result [33m=[39m [35mawait[39m patientService[33m.[39m[34mcreatePatient[39m(input2)[33m;[39m
    [90m217| [39m
    [90m218| [39m      [34mexpect[39m(result[33m.[39msuccess)[33m.[39m[34mtoBe[39m([35mtrue[39m)[33m;[39m
    [90m   | [39m                             [31m^[39m
    [90m219| [39m      [35mif[39m (result[33m.[39msuccess) {
    [90m220| [39m        const providerWarning = result.warnings!.find((w) => w.type ==‚Ä¶

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[35/44]‚éØ[22m[39m


[2m Test Files [22m [1m[31m11 failed[39m[22m[2m | [22m[1m[32m18 passed[39m[22m[2m | [22m[33m1 skipped[39m[90m (30)[39m
[2m      Tests [22m [1m[31m41 failed[39m[22m[2m | [22m[1m[32m429 passed[39m[22m[2m | [22m[33m9 skipped[39m[90m (479)[39m
[2m   Start at [22m 09:02:33
[2m   Duration [22m 4.95s[2m (transform 2.18s, setup 3.55s, collect 4.90s, tests 10.49s, environment 17.70s, prepare 429ms)[22m

